; ModuleID = 't2.ll'
source_filename = "t2.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @f1(ptr noundef %0, ptr noundef %1) #0 {
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x6f, 0x52, 0xbe, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x34, 0xea, 0x3c, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x54, 0x8d, 0xfd, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %6 = load ptr, ptr %3, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x95, 0xa6, 0x55, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %7 = load i8, ptr %6, align 1
  %8 = zext i8 %7 to i32
  store i32 %8, ptr %5, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x68, 0xad, 0x95, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %9 = load ptr, ptr %4, align 8
  %10 = load i8, ptr %9, align 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x80, 0xf4, 0xd9, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %11 = load ptr, ptr %3, align 8
  store i8 %10, ptr %11, align 1
  %12 = load i32, ptr %5, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x81, 0xd6, 0x0d, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %13 = trunc i32 %12 to i8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xdd, 0x5d, 0x33, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %14 = load ptr, ptr %4, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x9a, 0x4d, 0x9d, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i8 %13, ptr %14, align 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x39, 0xba, 0x5e, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @h1(ptr noundef %0, ptr noundef %1) #0 {
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x5f, 0x00, 0x01, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x81, 0xac, 0xab, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %3 = alloca ptr, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x2e, 0x33, 0xec, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x55, 0x0c, 0x2a, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %7 = alloca i32, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x10, 0xe4, 0x14, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %8 = alloca i32, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x82, 0x2e, 0x3a, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %9 = load ptr, ptr %3, align 8
  %10 = call i64 @strlen(ptr noundef %9) #2
  %11 = trunc i64 %10 to i32
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x01, 0x8f, 0xf7, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 %11, ptr %5, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x57, 0xe3, 0xec, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 0, ptr %6, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x48, 0x0f, 0x8d, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 0, ptr %7, align 4
  br label %12

12:                                               ; preds = %24, %2
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xd2, 0x5d, 0xda, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %13 = load i32, ptr %7, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x82, 0xcb, 0xaa, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %14 = icmp slt i32 %13, 256
  br label %15

15:                                               ; preds = %12
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x2e, 0x68, 0xa4, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xdc, 0x5c, 0x45, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %switchVar2 = alloca i32, align 4
  store i32 1, ptr %switchVar2, align 4
  br label %16

16:                                               ; preds = %case_2_else9, %case_2_then8, %case_16, %15
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x30, 0x4d, 0x06, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x31, 0x34, 0x2e, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %switchVar3 = load i32, ptr %switchVar2, align 4
  %cmp4 = icmp eq i32 %switchVar3, 0
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xe2, 0x6a, 0x22, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br i1 %cmp4, label %26, label %switch_statement5

17:                                               ; preds = %switch_statement5
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x7c, 0x5a, 0xa9, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xa5, 0x0d, 0x63, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %18 = load i32, ptr %7, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x1e, 0x51, 0x23, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %19 = trunc i32 %18 to i8
  %20 = load ptr, ptr %4, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x20, 0xcc, 0xa1, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %21 = load i32, ptr %7, align 4
  %22 = sext i32 %21 to i64
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x0d, 0xf9, 0xa7, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %23 = getelementptr inbounds i8, ptr %20, i64 %22
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x6b, 0xf3, 0x72, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i8 %19, ptr %23, align 1
  store i32 2, ptr %switchVar2, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x5d, 0xed, 0x9c, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %24

24:                                               ; preds = %17
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xa2, 0x43, 0xdc, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x67, 0x6e, 0x11, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x06, 0xa2, 0x63, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %25 = load i32, ptr %7, align 4
  %obf_xor = xor i32 %25, 1
  %obf_and = and i32 %25, 1
  %obf_shl = shl i32 %obf_and, 1
  %obf_add = add i32 %obf_xor, %obf_shl
  store i32 %obf_add, ptr %7, align 4
  br label %12, !llvm.loop !6

26:                                               ; preds = %switch_statement5, %16
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x60, 0xbd, 0xd5, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x06, 0xda, 0x8b, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 0, ptr %8, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x61, 0x15, 0x2b, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %27

27:                                               ; preds = %57, %26
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x9c, 0xab, 0x33, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x26, 0x19, 0x11, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %28 = load i32, ptr %8, align 4
  %29 = icmp slt i32 %28, 256
  br label %30

30:                                               ; preds = %27
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x6d, 0x36, 0xac, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x5b, 0x80, 0xa3, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %switchVar = alloca i32, align 4
  store i32 1, ptr %switchVar, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x03, 0x9f, 0x16, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %31

31:                                               ; preds = %case_2_else, %case_2_then, %case_1, %30
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x7f, 0x30, 0xd7, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x0d, 0xd6, 0x3b, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %switchVar1 = load i32, ptr %switchVar, align 4
  %cmp = icmp eq i32 %switchVar1, 0
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x5c, 0xee, 0x5b, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br i1 %cmp, label %59, label %switch_statement

32:                                               ; preds = %switch_statement
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xfc, 0x70, 0x53, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x48, 0x45, 0x31, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %33 = load i32, ptr %6, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x78, 0x12, 0x09, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %34 = load ptr, ptr %4, align 8
  %35 = load i32, ptr %8, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xa0, 0x4f, 0x2f, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %36 = sext i32 %35 to i64
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xc4, 0x83, 0x6a, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %37 = getelementptr inbounds i8, ptr %34, i64 %36
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x15, 0xc5, 0x5f, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %38 = load i8, ptr %37, align 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x7b, 0x77, 0x05, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %39 = zext i8 %38 to i32
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x7c, 0x69, 0xf8, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %obf_xor1 = xor i32 %33, %39
  %obf_and2 = and i32 %33, %39
  %obf_shl3 = shl i32 %obf_and2, 1
  %obf_add4 = add i32 %obf_xor1, %obf_shl3
  %40 = load ptr, ptr %3, align 8
  %41 = load i32, ptr %8, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x66, 0xd5, 0x7c, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %42 = load i32, ptr %5, align 4
  %43 = srem i32 %41, %42
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x19, 0x4a, 0x1b, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %44 = sext i32 %43 to i64
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x81, 0xae, 0x85, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %45 = getelementptr inbounds i8, ptr %40, i64 %44
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xf4, 0xe9, 0xd7, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %46 = load i8, ptr %45, align 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x4d, 0x66, 0x46, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %47 = sext i8 %46 to i32
  %obf_xor5 = xor i32 %obf_add4, %47
  %obf_and6 = and i32 %obf_add4, %47
  %obf_shl7 = shl i32 %obf_and6, 1
  %obf_add8 = add i32 %obf_xor5, %obf_shl7
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x3c, 0xc8, 0xcd, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %48 = srem i32 %obf_add8, 256
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xb7, 0xa6, 0x51, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 %48, ptr %6, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x49, 0xab, 0xd4, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %49 = load ptr, ptr %4, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x45, 0xe1, 0xeb, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %50 = load i32, ptr %8, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, ptr %49, i64 %51
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xd5, 0xca, 0x56, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %53 = load ptr, ptr %4, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x42, 0x9f, 0xe4, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %54 = load i32, ptr %6, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x3b, 0xd8, 0x33, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, ptr %53, i64 %55
  call void @f1(ptr noundef %52, ptr noundef %56)
  store i32 2, ptr %switchVar, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x79, 0xce, 0x9f, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %57

57:                                               ; preds = %32
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x9e, 0xc8, 0x3d, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x32, 0x0e, 0xa4, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %58 = load i32, ptr %8, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x3f, 0xde, 0xea, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %obf_xor9 = xor i32 %58, 1
  %obf_and10 = and i32 %58, 1
  %obf_shl11 = shl i32 %obf_and10, 1
  %obf_add12 = add i32 %obf_xor9, %obf_shl11
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x28, 0x9a, 0x56, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 %obf_add12, ptr %8, align 4
  br label %27, !llvm.loop !8

59:                                               ; preds = %switch_statement, %31
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x9a, 0xcd, 0x3f, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xa0, 0xa1, 0x70, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xce, 0xc2, 0x0d, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  ret i32 0

switch_statement:                                 ; preds = %31
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x68, 0x70, 0xb1, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  switch i32 %switchVar1, label %59 [
    i32 1, label %case_1
    i32 2, label %case_2
    i32 3, label %32
  ]

case_1:                                           ; preds = %switch_statement
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x40, 0x96, 0xa5, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x58, 0x90, 0x3f, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 2, ptr %switchVar, align 4
  br label %31

case_2:                                           ; preds = %switch_statement
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x2c, 0x5e, 0x03, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xd4, 0x45, 0x41, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %60 = icmp slt i32 %28, 256
  br i1 %60, label %case_2_then, label %case_2_else

case_2_then:                                      ; preds = %case_2
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x5e, 0x15, 0x42, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 3, ptr %switchVar, align 4
  br label %31

case_2_else:                                      ; preds = %case_2
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xf7, 0xcb, 0xcc, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 0, ptr %switchVar, align 4
  br label %31

switch_statement5:                                ; preds = %16
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x9e, 0x6e, 0x7e, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  switch i32 %switchVar3, label %26 [
    i32 1, label %case_16
    i32 2, label %case_27
    i32 3, label %17
  ]

case_16:                                          ; preds = %switch_statement5
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x72, 0x8e, 0x34, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x97, 0x45, 0xf1, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 2, ptr %switchVar2, align 4
  br label %16

case_27:                                          ; preds = %switch_statement5
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xbc, 0x27, 0x52, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x52, 0x39, 0xd4, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %61 = icmp slt i32 %13, 256
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x1d, 0xba, 0xf7, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br i1 %61, label %case_2_then8, label %case_2_else9

case_2_then8:                                     ; preds = %case_27
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x8f, 0x39, 0x2a, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 3, ptr %switchVar2, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x8d, 0x64, 0x66, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %16

case_2_else9:                                     ; preds = %case_27
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x74, 0x9c, 0xa3, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x9d, 0x89, 0x34, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 0, ptr %switchVar2, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xdd, 0x65, 0x5c, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %16
}

; Function Attrs: nounwind willreturn memory(read)
declare i64 @strlen(ptr noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @g1(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x2d, 0x21, 0xc0, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xd7, 0x23, 0x7f, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %7 = alloca ptr, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x34, 0xdd, 0x65, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %8 = alloca i32, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x65, 0x13, 0x08, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xb7, 0x35, 0xd0, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xa3, 0xab, 0xc1, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %13 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xf1, 0x50, 0x26, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store ptr %1, ptr %6, align 8
  store ptr %2, ptr %7, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x59, 0x2b, 0xf9, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 %3, ptr %8, align 4
  store i32 0, ptr %9, align 4
  store i32 0, ptr %10, align 4
  store i64 0, ptr %11, align 8
  %14 = load i32, ptr %8, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x0e, 0x74, 0x97, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %15 = sext i32 %14 to i64
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xa1, 0x00, 0x68, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i64 %15, ptr %12, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x87, 0xe9, 0x8f, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %16

16:                                               ; preds = %70, %4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x5c, 0x23, 0x15, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xe0, 0x81, 0x15, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %17 = load i64, ptr %11, align 8
  %18 = load i64, ptr %12, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x68, 0xcd, 0xac, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %19 = icmp ult i64 %17, %18
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x1c, 0xe3, 0x92, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %20

20:                                               ; preds = %16
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x14, 0xb3, 0xee, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x67, 0x64, 0x70, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x41, 0xb1, 0x1e, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %switchVar = alloca i32, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x6e, 0x9e, 0xc9, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 1, ptr %switchVar, align 4
  br label %21

21:                                               ; preds = %case_2_else, %case_2_then, %case_1, %20
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x8e, 0x4f, 0x5c, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x1a, 0x88, 0x1d, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %switchVar1 = load i32, ptr %switchVar, align 4
  %cmp = icmp eq i32 %switchVar1, 0
  br i1 %cmp, label %73, label %switch_statement

22:                                               ; preds = %switch_statement
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xf2, 0x46, 0x1c, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %23 = load i32, ptr %9, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xdc, 0xc8, 0xad, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %obf_xor = xor i32 %23, 1
  %obf_and = and i32 %23, 1
  %obf_shl = shl i32 %obf_and, 1
  %obf_add = add i32 %obf_xor, %obf_shl
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x62, 0xa9, 0xaa, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %24 = srem i32 %obf_add, 256
  store i32 %24, ptr %9, align 4
  %25 = load i32, ptr %10, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x24, 0xeb, 0xa2, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %26 = load ptr, ptr %5, align 8
  %27 = load i32, ptr %9, align 4
  %28 = sext i32 %27 to i64
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x73, 0xff, 0xd2, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %29 = getelementptr inbounds i8, ptr %26, i64 %28
  %30 = load i8, ptr %29, align 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xbc, 0x7f, 0x56, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %31 = zext i8 %30 to i32
  %obf_xor1 = xor i32 %25, %31
  %obf_and2 = and i32 %25, %31
  %obf_shl3 = shl i32 %obf_and2, 1
  %obf_add4 = add i32 %obf_xor1, %obf_shl3
  %32 = srem i32 %obf_add4, 256
  store i32 %32, ptr %10, align 4
  %33 = load ptr, ptr %5, align 8
  %34 = load i32, ptr %9, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x2b, 0xb7, 0x2b, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %35 = sext i32 %34 to i64
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x16, 0x53, 0xec, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %36 = getelementptr inbounds i8, ptr %33, i64 %35
  %37 = load ptr, ptr %5, align 8
  %38 = load i32, ptr %10, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x1d, 0xc8, 0x27, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, ptr %37, i64 %39
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xa6, 0x82, 0x5a, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void @f1(ptr noundef %36, ptr noundef %40)
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x29, 0x98, 0x68, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %41 = load ptr, ptr %5, align 8
  %42 = load ptr, ptr %5, align 8
  %43 = load i32, ptr %9, align 4
  %44 = sext i32 %43 to i64
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xff, 0xff, 0x01, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %45 = getelementptr inbounds i8, ptr %42, i64 %44
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xf7, 0x72, 0x1f, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %46 = load i8, ptr %45, align 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xa2, 0xc5, 0x32, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %47 = zext i8 %46 to i32
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xfd, 0x41, 0xed, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %48 = load ptr, ptr %5, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xd9, 0xac, 0x86, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %49 = load i32, ptr %10, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xd7, 0x2b, 0x52, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %50 = sext i32 %49 to i64
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xea, 0x9c, 0x6f, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %51 = getelementptr inbounds i8, ptr %48, i64 %50
  %52 = load i8, ptr %51, align 1
  %53 = zext i8 %52 to i32
  %obf_xor5 = xor i32 %47, %53
  %obf_and6 = and i32 %47, %53
  %obf_shl7 = shl i32 %obf_and6, 1
  %obf_add8 = add i32 %obf_xor5, %obf_shl7
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xa6, 0xa7, 0xd6, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %54 = srem i32 %obf_add8, 256
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xc5, 0xe2, 0x98, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, ptr %41, i64 %55
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x24, 0x92, 0xb2, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %57 = load i8, ptr %56, align 1
  %58 = zext i8 %57 to i32
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x9f, 0xf9, 0xde, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 %58, ptr %13, align 4
  %59 = load i32, ptr %13, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x60, 0xde, 0x02, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %60 = load ptr, ptr %6, align 8
  %61 = load i64, ptr %11, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x96, 0x69, 0xa2, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %62 = getelementptr inbounds i8, ptr %60, i64 %61
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xe9, 0x73, 0xdf, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %63 = load i8, ptr %62, align 1
  %64 = zext i8 %63 to i32
  %65 = xor i32 %59, %64
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x98, 0x3d, 0x1b, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %66 = trunc i32 %65 to i8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x08, 0xf8, 0xaf, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %67 = load ptr, ptr %7, align 8
  %68 = load i64, ptr %11, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x9e, 0x04, 0x4d, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %69 = getelementptr inbounds i8, ptr %67, i64 %68
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x20, 0x25, 0x6c, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i8 %66, ptr %69, align 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x8c, 0x64, 0xa7, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 2, ptr %switchVar, align 4
  br label %70

70:                                               ; preds = %22
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x73, 0xfd, 0x88, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %71 = load i64, ptr %11, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x29, 0x3e, 0x70, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %72 = add i64 %71, 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xf9, 0xa6, 0x1a, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i64 %72, ptr %11, align 8
  br label %16, !llvm.loop !9

73:                                               ; preds = %switch_statement, %21
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xdf, 0xfd, 0xaf, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x26, 0x84, 0x84, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x0c, 0x1a, 0x45, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  ret i32 0

switch_statement:                                 ; preds = %21
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xf1, 0x6e, 0xea, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  switch i32 %switchVar1, label %73 [
    i32 1, label %case_1
    i32 2, label %case_2
    i32 3, label %22
  ]

case_1:                                           ; preds = %switch_statement
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x1f, 0x37, 0x1d, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x03, 0x7b, 0x2b, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xf8, 0x4b, 0x7e, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 2, ptr %switchVar, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xd1, 0x4c, 0xfe, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %21

case_2:                                           ; preds = %switch_statement
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x3f, 0x4b, 0x63, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x60, 0x2c, 0x39, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %74 = icmp ult i64 %17, %18
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xb7, 0x9c, 0xce, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br i1 %74, label %case_2_then, label %case_2_else

case_2_then:                                      ; preds = %case_2
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x5c, 0x5a, 0x31, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 3, ptr %switchVar, align 4
  br label %21

case_2_else:                                      ; preds = %case_2
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xbd, 0x68, 0x7a, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x24, 0x09, 0x47, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x10, 0xf4, 0xf1, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 0, ptr %switchVar, align 4
  br label %21
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @t2(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x71, 0xdc, 0x1e, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x79, 0x5a, 0x6d, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x8f, 0xb1, 0x91, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %5 = alloca ptr, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x88, 0xba, 0xa7, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %6 = alloca ptr, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x4a, 0xf5, 0x13, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %7 = alloca ptr, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x91, 0x82, 0x01, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %8 = alloca i32, align 4
  %9 = alloca [256 x i8], align 16
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xaa, 0xd2, 0x8c, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store ptr %0, ptr %5, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xc2, 0x88, 0xf7, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store ptr %1, ptr %6, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xf1, 0xf1, 0x49, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store ptr %2, ptr %7, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x4a, 0x55, 0xc2, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 %3, ptr %8, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xf9, 0x7e, 0x2c, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %10 = load ptr, ptr %5, align 8
  %11 = getelementptr inbounds [256 x i8], ptr %9, i64 0, i64 0
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xab, 0x57, 0xf4, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %12 = call i32 @h1(ptr noundef %10, ptr noundef %11)
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xf0, 0x6f, 0x87, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %13 = getelementptr inbounds [256 x i8], ptr %9, i64 0, i64 0
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xd4, 0x9f, 0xba, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %14 = load ptr, ptr %6, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xa7, 0xbb, 0xa6, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %15 = load ptr, ptr %7, align 8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x16, 0x5d, 0xa4, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %16 = load i32, ptr %8, align 4
  %17 = call i32 @g1(ptr noundef %13, ptr noundef %14, ptr noundef %15, i32 noundef %16)
  ret i32 0
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind willreturn memory(read) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nounwind willreturn memory(read) }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Debian clang version 18.1.8 (++20240731024826+3b5b5c1ec4a3-1~exp1~20240731144843.145)"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
