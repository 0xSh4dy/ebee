; ModuleID = 't3.ll'
source_filename = "t3.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@__const.t31.xm = private unnamed_addr constant [10 x i8] c"By%u T \22\22&", align 1
@t31.val = internal global [10 x i8] zeroinitializer, align 1
@__const.t32.xm = private unnamed_addr constant [10 x i8] c"m%%b'q\22#hq", align 1
@t32.val = internal global [10 x i8] zeroinitializer, align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @t31() #0 {
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xe8, 0xca, 0xe7, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xda, 0x9d, 0x48, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %1 = alloca [10 x i8], align 1
  %2 = alloca i32, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %1, ptr align 1 @__const.t31.xm, i64 10, i1 false)
  store i32 0, ptr %2, align 4
  br label %3

3:                                                ; preds = %19, %0
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xdc, 0x3a, 0x48, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x81, 0x49, 0x09, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x07, 0x65, 0xe4, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %4 = load i32, ptr %2, align 4
  %5 = icmp slt i32 %4, 10
  br label %6

6:                                                ; preds = %3
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x11, 0x14, 0x90, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xf6, 0x78, 0xaa, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %switchVar = alloca i32, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x08, 0x3d, 0x01, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 1, ptr %switchVar, align 4
  br label %7

7:                                                ; preds = %case_2_else, %case_2_then, %case_1, %6
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xd7, 0x80, 0x37, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x50, 0xf4, 0x8f, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %switchVar1 = load i32, ptr %switchVar, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x0c, 0x59, 0xca, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %cmp = icmp eq i32 %switchVar1, 0
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x7f, 0x76, 0xc8, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br i1 %cmp, label %21, label %switch_statement

8:                                                ; preds = %switch_statement
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x7e, 0xa2, 0xed, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x98, 0x26, 0x13, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x3d, 0x16, 0xa0, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %9 = load i32, ptr %2, align 4
  %10 = sext i32 %9 to i64
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x16, 0x15, 0x93, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %11 = getelementptr inbounds [10 x i8], ptr %1, i64 0, i64 %10
  %12 = load i8, ptr %11, align 1
  %13 = sext i8 %12 to i32
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x2e, 0x8e, 0x75, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %14 = xor i32 %13, 17
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x72, 0xb0, 0x24, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %15 = trunc i32 %14 to i8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xd7, 0xc5, 0x44, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %16 = load i32, ptr %2, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [10 x i8], ptr @t31.val, i64 0, i64 %17
  store i8 %15, ptr %18, align 1
  store i32 2, ptr %switchVar, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xc1, 0xd3, 0x9b, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %19

19:                                               ; preds = %8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x53, 0x16, 0x3b, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x7f, 0x92, 0x02, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xe5, 0x21, 0xc2, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %20 = load i32, ptr %2, align 4
  %obf_xor = xor i32 %20, 1
  %obf_and = and i32 %20, 1
  %obf_shl = shl i32 %obf_and, 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xb1, 0xa1, 0xdc, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %obf_add = add i32 %obf_xor, %obf_shl
  store i32 %obf_add, ptr %2, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xf2, 0x0b, 0xf6, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %3, !llvm.loop !6

21:                                               ; preds = %switch_statement, %7
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x10, 0x38, 0x46, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  ret ptr @t31.val

switch_statement:                                 ; preds = %7
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x9f, 0x7f, 0x37, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  switch i32 %switchVar1, label %21 [
    i32 1, label %case_1
    i32 2, label %case_2
    i32 3, label %8
  ]

case_1:                                           ; preds = %switch_statement
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x00, 0x72, 0xe1, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x20, 0xca, 0x33, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 2, ptr %switchVar, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xb5, 0x2c, 0xba, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %7

case_2:                                           ; preds = %switch_statement
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x5e, 0x3e, 0x0a, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x1b, 0x30, 0xec, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %22 = icmp slt i32 %4, 10
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x85, 0xd5, 0xcb, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br i1 %22, label %case_2_then, label %case_2_else

case_2_then:                                      ; preds = %case_2
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xa0, 0x8d, 0x6f, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x9c, 0x91, 0x47, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 3, ptr %switchVar, align 4
  br label %7

case_2_else:                                      ; preds = %case_2
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x62, 0xef, 0x78, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xf5, 0x04, 0xa7, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x17, 0x9a, 0x9b, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 0, ptr %switchVar, align 4
  br label %7
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @t32() #0 {
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x87, 0xdd, 0x17, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xb7, 0x1b, 0x6f, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x25, 0xc3, 0xb4, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %1 = alloca [10 x i8], align 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x07, 0xda, 0x0d, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %2 = alloca i32, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %1, ptr align 1 @__const.t32.xm, i64 10, i1 false)
  store i32 0, ptr %2, align 4
  br label %3

3:                                                ; preds = %19, %0
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x7f, 0xa1, 0x34, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xef, 0x1a, 0xe4, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %4 = load i32, ptr %2, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x4f, 0x4f, 0x39, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %5 = icmp slt i32 %4, 10
  br label %6

6:                                                ; preds = %3
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x78, 0x89, 0x8a, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x2f, 0x5d, 0x14, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %switchVar = alloca i32, align 4
  store i32 1, ptr %switchVar, align 4
  br label %7

7:                                                ; preds = %case_2_else, %case_2_then, %case_1, %6
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x8f, 0x59, 0xdd, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xce, 0xf5, 0x2d, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %switchVar1 = load i32, ptr %switchVar, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x32, 0x6f, 0x9a, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %cmp = icmp eq i32 %switchVar1, 0
  br i1 %cmp, label %21, label %switch_statement

8:                                                ; preds = %switch_statement
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x36, 0x7a, 0x82, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x7f, 0x5d, 0x79, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %9 = load i32, ptr %2, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x38, 0x0d, 0x1d, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %10 = sext i32 %9 to i64
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xff, 0x05, 0x02, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %11 = getelementptr inbounds [10 x i8], ptr %1, i64 0, i64 %10
  %12 = load i8, ptr %11, align 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xad, 0xd6, 0xee, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %13 = sext i8 %12 to i32
  %obf_xor = xor i32 %13, 10
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xa2, 0xd3, 0x81, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %obf_and = and i32 %13, 10
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x3a, 0xce, 0x6a, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %obf_shl = shl i32 %obf_and, 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xfe, 0x06, 0xed, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %obf_add = add i32 %obf_xor, %obf_shl
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xc0, 0x44, 0xf0, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %14 = xor i32 %obf_add, 28
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x2e, 0xec, 0x50, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %15 = trunc i32 %14 to i8
  %16 = load i32, ptr %2, align 4
  %17 = sext i32 %16 to i64
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xb9, 0x84, 0x94, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %18 = getelementptr inbounds [10 x i8], ptr @t32.val, i64 0, i64 %17
  store i8 %15, ptr %18, align 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x5b, 0xda, 0x97, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 2, ptr %switchVar, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x72, 0x0a, 0xeb, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %19

19:                                               ; preds = %8
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x9b, 0x09, 0xd2, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x85, 0xff, 0x9b, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x40, 0xa2, 0xa2, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %20 = load i32, ptr %2, align 4
  %obf_xor1 = xor i32 %20, 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x03, 0xe4, 0xf8, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %obf_and2 = and i32 %20, 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x4b, 0x57, 0xbe, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %obf_shl3 = shl i32 %obf_and2, 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x9d, 0xf8, 0x18, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %obf_add4 = add i32 %obf_xor1, %obf_shl3
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x9a, 0x46, 0x1c, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 %obf_add4, ptr %2, align 4
  br label %3, !llvm.loop !8

21:                                               ; preds = %switch_statement, %7
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x84, 0xa6, 0x58, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x5d, 0x16, 0xf4, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  ret ptr @t32.val

switch_statement:                                 ; preds = %7
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x83, 0x05, 0xd3, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xcc, 0xca, 0x37, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xfd, 0x23, 0xdc, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  switch i32 %switchVar1, label %21 [
    i32 1, label %case_1
    i32 2, label %case_2
    i32 3, label %8
  ]

case_1:                                           ; preds = %switch_statement
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x5a, 0x99, 0x5d, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 2, ptr %switchVar, align 4
  br label %7

case_2:                                           ; preds = %switch_statement
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x39, 0x9c, 0x2b, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xad, 0x1a, 0xb8, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %22 = icmp slt i32 %4, 10
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x76, 0x5f, 0xd2, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br i1 %22, label %case_2_then, label %case_2_else

case_2_then:                                      ; preds = %case_2
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x97, 0x83, 0xae, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xa0, 0xa8, 0x9e, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xcf, 0x8a, 0x11, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 3, ptr %switchVar, align 4
  br label %7

case_2_else:                                      ; preds = %case_2
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x57, 0xd7, 0x1e, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x4b, 0x14, 0x89, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x57, 0x08, 0xee, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 0, ptr %switchVar, align 4
  br label %7
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Debian clang version 18.1.8 (++20240731024826+3b5b5c1ec4a3-1~exp1~20240731144843.145)"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
!8 = distinct !{!8, !7}
