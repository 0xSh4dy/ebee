; ModuleID = 't1.ll'
source_filename = "t1.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @t1(ptr noundef %0, i32 noundef %1) #0 {
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x67, 0x26, 0xd8, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x7b, 0x3a, 0xc6, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x6e, 0x89, 0x73, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %8 = alloca i32, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x64, 0xd6, 0xa7, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %9 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  store i32 %1, ptr %4, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xb4, 0x85, 0xc9, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 0, ptr %5, align 4
  store i32 -1, ptr %8, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x95, 0x9a, 0x29, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %10

10:                                               ; preds = %46, %2
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x81, 0x36, 0xf7, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %11 = load i32, ptr %5, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xb4, 0xd2, 0x24, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %12 = load i32, ptr %4, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x02, 0x0c, 0xdd, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %13 = icmp ult i32 %11, %12
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x4d, 0x81, 0xad, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %14

14:                                               ; preds = %10
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x3e, 0xec, 0x25, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xaa, 0x0e, 0x9a, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xdd, 0x77, 0x51, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %switchVar2 = alloca i32, align 4
  store i32 1, ptr %switchVar2, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xd9, 0x9d, 0x2f, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %15

15:                                               ; preds = %case_2_else9, %case_2_then8, %case_16, %14
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xa4, 0xf9, 0x29, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %switchVar3 = load i32, ptr %switchVar2, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x82, 0x2d, 0x67, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %cmp4 = icmp eq i32 %switchVar3, 0
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xe9, 0xb0, 0x35, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br i1 %cmp4, label %52, label %switch_statement5

16:                                               ; preds = %switch_statement5
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x66, 0x21, 0x47, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x1d, 0xa6, 0x4e, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %17 = load ptr, ptr %3, align 8
  %18 = load i32, ptr %5, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, ptr %17, i64 %19
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x9c, 0x9b, 0xd8, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %21 = load i8, ptr %20, align 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x51, 0x9c, 0x2d, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %22 = zext i8 %21 to i32
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x06, 0x28, 0x8c, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 %22, ptr %7, align 4
  %23 = load i32, ptr %8, align 4
  %24 = load i32, ptr %7, align 4
  %25 = xor i32 %23, %24
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x7a, 0x55, 0x91, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 %25, ptr %8, align 4
  store i32 7, ptr %6, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x34, 0x0f, 0x2a, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 2, ptr %switchVar2, align 4
  br label %26

26:                                               ; preds = %40, %16
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xa8, 0xf4, 0x2b, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %27 = load i32, ptr %6, align 4
  %28 = icmp sge i32 %27, 0
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xd4, 0x29, 0x94, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %29

29:                                               ; preds = %26
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x3f, 0x79, 0x9f, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xda, 0x74, 0x21, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %switchVar = alloca i32, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xa8, 0x02, 0x97, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 1, ptr %switchVar, align 4
  br label %30

30:                                               ; preds = %case_2_else, %case_2_then, %case_1, %29
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x05, 0xf9, 0xda, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x63, 0x76, 0x6d, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %switchVar1 = load i32, ptr %switchVar, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x6f, 0xcf, 0x94, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %cmp = icmp eq i32 %switchVar1, 0
  br i1 %cmp, label %46, label %switch_statement

31:                                               ; preds = %switch_statement
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x24, 0xf8, 0x28, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xc3, 0xdb, 0x5c, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x40, 0x85, 0x19, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %32 = load i32, ptr %8, align 4
  %33 = and i32 %32, 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xf1, 0x03, 0x5b, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %34 = sub i32 0, %33
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x72, 0x70, 0x15, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 %34, ptr %9, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x84, 0xe3, 0xa0, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %35 = load i32, ptr %8, align 4
  %36 = lshr i32 %35, 1
  %37 = load i32, ptr %9, align 4
  %38 = and i32 -306674912, %37
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x71, 0xd4, 0xf7, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %39 = xor i32 %36, %38
  store i32 %39, ptr %8, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xab, 0x9f, 0xd7, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 2, ptr %switchVar, align 4
  br label %40

40:                                               ; preds = %31
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x43, 0xce, 0x4b, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x34, 0x46, 0x42, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %41 = load i32, ptr %6, align 4
  %42 = xor i32 %41, -1
  %43 = and i32 %41, -1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x1f, 0x67, 0x30, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %44 = shl i32 %43, 1
  %45 = add i32 %42, %44
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x49, 0xcf, 0x74, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 %45, ptr %6, align 4
  br label %26, !llvm.loop !6

46:                                               ; preds = %switch_statement, %30
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xa1, 0x2c, 0xdf, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xce, 0x5d, 0x2c, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %47 = load i32, ptr %5, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x98, 0x30, 0xaf, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %48 = xor i32 %47, 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xda, 0x8b, 0x72, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %49 = and i32 %47, 1
  %50 = shl i32 %49, 1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xdd, 0x6a, 0x0e, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %51 = add i32 %48, %50
  store i32 %51, ptr %5, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x57, 0x6d, 0x9a, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %10, !llvm.loop !8

52:                                               ; preds = %switch_statement5, %15
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x81, 0xcf, 0x79, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x5f, 0xc4, 0xd8, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xd9, 0xe9, 0x5b, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %53 = load i32, ptr %8, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x55, 0x25, 0x46, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %54 = xor i32 %53, -1
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x19, 0xbc, 0xe7, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  ret i32 %54

switch_statement:                                 ; preds = %30
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x70, 0x62, 0x34, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  switch i32 %switchVar1, label %46 [
    i32 1, label %case_1
    i32 2, label %case_2
    i32 3, label %31
  ]

case_1:                                           ; preds = %switch_statement
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x0e, 0x26, 0x84, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x36, 0x61, 0x9e, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 2, ptr %switchVar, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xee, 0xba, 0x39, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %30

case_2:                                           ; preds = %switch_statement
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x80, 0x88, 0xa3, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x3f, 0x45, 0xfa, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xeb, 0xc4, 0xfe, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %55 = icmp sge i32 %27, 0
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x98, 0x19, 0x00, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br i1 %55, label %case_2_then, label %case_2_else

case_2_then:                                      ; preds = %case_2
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x19, 0x49, 0x13, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x56, 0xdb, 0x5c, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 3, ptr %switchVar, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xc5, 0x40, 0x2e, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %30

case_2_else:                                      ; preds = %case_2
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x28, 0x02, 0xae, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x2e, 0xef, 0x0f, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xec, 0x80, 0x81, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 0, ptr %switchVar, align 4
  br label %30

switch_statement5:                                ; preds = %15
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xfc, 0xc9, 0x90, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x57, 0xd7, 0x13, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  switch i32 %switchVar3, label %52 [
    i32 1, label %case_16
    i32 2, label %case_27
    i32 3, label %16
  ]

case_16:                                          ; preds = %switch_statement5
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x6d, 0xda, 0xa4, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x9e, 0x6d, 0x58, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x2d, 0xd5, 0xe5, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 2, ptr %switchVar2, align 4
  br label %15

case_27:                                          ; preds = %switch_statement5
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x73, 0x19, 0x20, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  %56 = icmp ult i32 %11, %12
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x20, 0xdf, 0xf6, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br i1 %56, label %case_2_then8, label %case_2_else9

case_2_then8:                                     ; preds = %case_27
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x83, 0x0a, 0x6d, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x00, 0x88, 0x71, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 3, ptr %switchVar2, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x9d, 0x21, 0x57, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %15

case_2_else9:                                     ; preds = %case_27
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x90, 0x12, 0xa0, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0x1b, 0x8d, 0x10, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  store i32 0, ptr %switchVar2, align 4
  call void asm sideeffect inteldialect ".byte 0x48, 0xB8, 0xab, 0xc6, 0x73, 0xEB, 0x08, 0xFF, 0xFF, 0x48, 0x31, 0xC0, 0xEB, 0xF7, 0xE8\0A", "~{eax}"()
  br label %15
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Debian clang version 18.1.8 (++20240731024826+3b5b5c1ec4a3-1~exp1~20240731144843.145)"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
!8 = distinct !{!8, !7}
